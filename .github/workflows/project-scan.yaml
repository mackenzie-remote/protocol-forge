name: Daily project update scan

on:
  schedule:
    - cron: '0 */8 * * *'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests
      - name: Run project-release-scan.py
        id: matrix
        run: |
          .github/bin/project-release-scan.py ${{ secrets.GITHUB_TOKEN }} >/tmp/matrix
          cat /tmp/matrix
          echo "matrix=$(cat /tmp/matrix)" >> $GITHUB_OUTPUT
          rm /tmp/matrix
  Notification:
    needs:
      - setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: "${{ fromJson(needs.setup.outputs.matrix) }}"
    steps:
      - uses: actions/checkout@v3
      - name: Set pr_branch_name variable
        run: |
          echo "pr_branch_name=version-update-${{ matrix.name }}-${{ matrix.current_release }}" >> $GITHUB_ENV
      - name: Set create_pr variable if PR branch already exists
        id: create_pr
        run: |
          create_pr=true
          if git show-ref --quiet ${{ env.pr_branch_name }}; then
            echo "Branch ${{ env.pr_branch_name }} already exists, setting create_pr=false.."
            create_pr=false
          fi
          echo "create_pr=${create_pr}" >> $GITHUB_ENV
      - name: Update VERSION file
        if: ${{ env.create_pr }}
        run: |
          echo "${{ matrix.current_release }}" > ${{ matrix.name }}/VERSION
      - name: Create Pull Request
        if: ${{ env.create_pr }}
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT_GITHUB_TOKEN }}
          commit-message: 'chore(${{ matrix.name }}): Update to ${{ matrix.current_release }}'
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: ${{ env.pr_branch_name }}
          delete-branch: true
          title: 'chore(${{ matrix.name }}): Update to ${{ matrix.current_release }}'
          body: |
            Automated update for `${{ matrix.name }}`

            Old version: `${{ matrix.existing_release }}`
            New version: `${{ matrix.current_release }}`
          labels: |
            automated pr
          draft: false
      - name: Enable Pull Request Automerge
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: gh pr merge --delete-branch --merge --auto ${{ steps.cpr.outputs.pull-request-number }}
        env:
          GH_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}
